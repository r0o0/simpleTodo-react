{"version":3,"sources":["utils/api.js","utils/general.js","components/Form.js","components/Modal.js","pages/Home/index.js","pages/App/App.js","serviceWorker.js","index.js"],"names":["baseURL","process","getTodos","set","axios","get","concat","then","res","console","log","data","status","catch","error","deleteTodo","id","delete","postTodo","post","updateTodo","put","addClass","target","classname","classList","add","removeClass","targetClass","contains","remove","Form","props","submitState","_useReducer","useReducer","state","newState","Object","objectSpread","todo","category","isDone","_useReducer2","slicedToArray","setState","_useState","useState","_useState2","submit","setSubmit","_useState3","_useState4","readyToSubmit","setReadyToSubmit","_useState5","_useState6","todoError","setTodoError","_useState7","_useState8","categoryError","setCategoryError","handleChange","e","type","defineProperty","value","handleError","useCallback","length","handleBlur","handleKeyboardEvent","keyCode","preventDefault","useEffect","todoI","document","querySelector","categoryI","useMemo","react_default","a","createElement","className","onSubmit","reset","handleSubmit","onChange","onKeyDown","onBlur","autoComplete","Modal","isSubmit","setIsSubmit","isModalClosed","setIsModalClosed","modal","useRef","triggerBtn","closeModal","current","setTimeout","form","react","ref","onClick","components_Form","Home","deleteState","setDeleteState","setSubmitState","update","setUpdate","setData","newData","oldData","assign","fetchData","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","apply","this","arguments","keys","map","key","list","checked","handleCheckedState","handleDelete","components_Modal","App","pages_Home","Boolean","window","location","hostname","match","ReactDOM","render","pages_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd928fd3.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseURL = process.env.REACT_APP_FIREBASE_API;\n\n// fetch todo\nconst getTodos = (set) => {\n  axios.get(`${baseURL}.json`)\n  .then(res => {\n    console.log('get todo', res.data);\n    if (res.status === 200) {\n      const data = res.data;\n      set(data);\n    }\n  })\n  .catch(error => {\n    console.error(error);\n  });\n};\n\n// delete todo item\nconst deleteTodo = (id) => {\n  console.log(id);\n  axios.delete(`${baseURL}/${id}.json`)\n  .then(res => {\n    console.log('delete todo', res.data);\n  })\n  .catch(error => {\n    console.error(error);\n  });\n}\n\n// post todo item\nconst postTodo = (data) => {\n  axios.post(`${baseURL}.json`, data)\n  .then(res => {\n    console.log('post todo', res.data);\n  })\n  .catch(error => {\n    console.error(error);\n  });\n}\n\n// update todo item\nconst updateTodo = (id, data) => {\n  axios.put(`${baseURL}/${id}.json`, data)\n  .then(res => {\n    console.log('update todo', res.data);\n  })\n  .catch(error => {\n    console.error(error);\n  });\n};\n\nexport {\n  getTodos,\n  deleteTodo,\n  postTodo,\n  updateTodo,\n};\n","// add class\nconst addClass = (target, classname) => {\n  if (target !== null) {\n    const targetClass = target.classList;\n    targetClass.add(classname);\n    // console.log('add class', target, classname, targetClass);\n  }\n};\n\n// remove class\nconst removeClass = (target, classname) => {\n  if (target !== null) {\n    const targetClass = target.classList;\n    const check = targetClass.contains(classname);\n    if (check) {\n      targetClass.remove(classname);\n    }\n    // console.log('remove class', target, classname, targetClass);\n  }\n};\n\nexport {\n  addClass,\n  removeClass,\n};\n","import React, { useReducer, useState, useEffect, useMemo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n// UTILS\nimport { postTodo } from '../utils/api';\nimport { addClass, removeClass } from '../utils/general';\n// CSS\nimport './Form.sass';\n\nfunction Form(props) {\n\n  const {\n    submitState,\n  } = props;\n\n  const initialState = {\n    todo: null,\n    category: null,\n    isDone: false,\n  }\n  const reducer = (state, newState) => ({ ...state, ...newState });\n  const [state, setState] = useReducer(reducer, initialState);\n  const [submit, setSubmit] = useState(false);\n  const [readyToSubmit, setReadyToSubmit] = useState(false);\n  const [todoError, setTodoError] = useState(null);\n  const [categoryError, setCategoryError] = useState(null);\n\n  // input value onChange\n  const handleChange = (e) => {\n    const type = e.target.id;\n    setSubmit(false);\n    setState({ [type]: e.target.value });\n    console.log('handle change', state);\n    if (type === 'todo') {\n      setTodoError(false);\n    }\n    if (type === 'category') {\n      setCategoryError(false);\n    }\n    if (e.target.value <= 0) {\n      setReadyToSubmit(false);\n    }\n  };\n\n  // error validation\n  const handleError = useCallback((type, value) => {\n    console.log('%c handle Error', 'background: red; color: white', type, value);\n    if (value.length <= 0) {\n      if (type === 'todo') {\n        setTodoError(true);\n      }\n      if (type === 'category') {\n        setCategoryError(true);\n      }\n      if (readyToSubmit) {\n        setReadyToSubmit(false);\n      }\n    } else {\n      if (type === 'todo') {\n        setTodoError(false);\n      }\n      if (type === 'category') {\n        setCategoryError(false);\n      }\n    }\n  }, [readyToSubmit]);\n\n  // input onBlur\n  const handleBlur = (e) => {\n    const type = e.target.id;\n    setSubmit(false);\n    setState({ [type]: e.target.value });\n    if (state.todo !== null && state.category !== null) {\n      if (type === 'todo' && state.todo.length <= 0) {\n        setTodoError(true);\n      }\n      if (type === 'category' && state.todo.length <= 0) {\n        setCategoryError(true);\n      }\n    }\n    if (e.target.value <= 0) {\n      setReadyToSubmit(false);\n    }\n  };\n\n  // Keyboard Event\n  const handleKeyboardEvent = (e) => {\n    if (e.keyCode === 13 && e.target.id === 'todo') {\n      e.preventDefault();\n    }\n    if (e.keyCode === 13 || e.keyCode === 9) {\n      // console.log('%c KEY ENTER', 'background: green; color: white;', e.target);\n      handleError(e.target.id, e.target.value);\n    }\n  };\n\n  // Submit form\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSubmit(true);\n    if (readyToSubmit) {\n      // console.log('%c SUBMIT VALID', 'background: white; color: green');\n      postTodo(state);\n      submitState(true);\n      // reset\n      document.querySelector('form').reset();\n      setReadyToSubmit(false);\n    }\n  };\n\n  useEffect(() => {\n    const todoI = document.querySelector('#todo');\n    const categoryI = document.querySelector('#category');\n\n    console.log('%c effect', 'background: blue; color: white;', '\\n', 'ready to submit:',  readyToSubmit, '\\n', 'error states:', todoError, categoryError, '\\n', 'state:', state);\n    if (todoError) {\n      addClass(todoI, 'error__input');\n    } else {\n      removeClass(todoI, 'error__input');\n    }\n    if (categoryError) {\n      addClass(categoryI, 'error__input');\n    } else {\n      removeClass(categoryI, 'error__input');\n    }\n    if (todoError !== null && categoryError !== null) {\n      if (!todoError && !categoryError) {\n        setReadyToSubmit(true);\n      }\n    }\n  }, [state, todoError, categoryError, readyToSubmit]);\n\n  useMemo(() => {\n    const todoI = document.querySelector('#todo');\n    const categoryI = document.querySelector('#category');\n    if (!readyToSubmit && submit) {\n      if (todoI.value === null || state.todo <= 0) {\n        handleError(todoI.id, todoI.value);\n        setReadyToSubmit(false);\n      }\n      if (categoryI.value === null || state.category <= 0) {\n        handleError(categoryI.id, categoryI.value);\n        setReadyToSubmit(false);\n      }\n    }\n  }, [readyToSubmit, submit, handleError, state]);\n\n  return (\n    <form className=\"form__todo\" onSubmit={e => handleSubmit(e)}>\n      <div className=\"inputBox\">\n        <label>\n          Todo\n          <input\n            id=\"todo\"\n            className=\"inputBox__field\"\n            type=\"input\"\n            onChange={(e) => handleChange(e)}\n            onKeyDown={e => handleKeyboardEvent(e)}\n            onBlur={e => handleBlur(e)}\n            autoComplete=\"off\"\n          />\n        </label>\n        {todoError ? <p className=\"error__msg\">Please enter todo.</p> : null}\n      </div>\n      <div className=\"inputBox\">\n        <label>\n          Category\n          <input\n            id=\"category\"\n            type=\"input\"\n            className=\"inputBox__field\"\n            onChange={e => handleChange(e)}\n            onKeyDown={e => handleKeyboardEvent(e)}\n            onBlur={e => handleBlur(e)}\n            autoComplete=\"off\"\n          />\n        </label>\n        {categoryError ? <p className=\"error__msg\">Please enter category.</p> : null}\n      </div>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n}\n\nForm.propTypes = {\n  submitState: PropTypes.func.isRequired,\n  isModalClosed: PropTypes.bool.isRequired,\n};\n\nexport default Form;\n","import React, { Fragment, useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// COMPONENT\nimport Form from './Form';\nimport { addClass, removeClass } from '../utils/general';\n// CSS\nimport './Modal.sass';\n\nfunction Modal(props) {\n  const {\n    submitState,\n  } = props;\n  const [isSubmit, setIsSubmit] = useState(null);\n  const [isModalClosed, setIsModalClosed] = useState(true);\n  const modal = useRef(null);\n  const triggerBtn = useRef(null);\n\n  const openModal = () => {\n    removeClass(modal.current.querySelector('.modal--wrapper'), 'hide--modal');\n    addClass(modal.current, 'show');\n    addClass(modal.current.querySelector('.modal--wrapper'), 'show--modal');\n    addClass(triggerBtn.current, 'hide');\n    setIsModalClosed(false);\n    setIsSubmit(false);\n  };\n\n  const closeModal = () => {\n    removeClass(modal.current.querySelector('.modal--wrapper'), 'show--modal');\n    setTimeout(() => addClass(modal.current.querySelector('.modal--wrapper'), 'hide--modal'), 100);\n    setTimeout(() => removeClass(modal.current, 'show'), 400);\n    removeClass(triggerBtn.current, 'hide');\n    const form = document.querySelector('form');\n    if (isSubmit === null) {\n      form.reset();\n    }\n    if (isSubmit) {\n      submitState(isSubmit);\n    }\n    setIsModalClosed(true);\n  };\n\n  // Close modal on form submit\n  useEffect(() => {\n    if (isSubmit) {\n      closeModal();\n    }\n  }, [isSubmit]);\n\n  return (\n    <Fragment>\n      <input\n        ref={triggerBtn}\n        className=\"btn--show\"\n        type=\"button\"\n        value=\"Add todo\"\n        onClick={() => openModal()}\n      />\n      <div ref={modal} className=\"modal\">\n        <div className=\"modal--wrapper\">\n          <Form submitState={isSubmit => setIsSubmit(isSubmit)} isModalClosed={isModalClosed} />\n          <input\n            className=\"btn--close\"\n            type=\"button\"\n            value=\"Close\"\n            onClick={() => closeModal()}\n          />\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nModal.propTypes = {\n  submitState: PropTypes.func.isRequired,\n}\n\nexport default Modal;\n","import React, { useEffect, useState } from 'react';\n// COMPONENTS\nimport Modal from '../../components/Modal';\n// UTILS\nimport { getTodos, deleteTodo, updateTodo } from '../../utils/api';\n// CSS\nimport './Home.sass';\n\nfunction Home() {\n  const [deleteState, setDeleteState] = useState(false);\n  const [submitState, setSubmitState] = useState(false);\n  const [update, setUpdate] = useState(false);\n  const [data, setData] = useState(null);\n\n  // copy data function\n  const newData = (oldData, newData) => {\n    return Object.assign(oldData, newData);\n  };\n\n  // manage todo complete state\n  const handleCheckedState = (e, key) => {\n    const oldData = data[key];\n    if(!data[key].isDone) {\n      const data = newData(oldData, { isDone: true });\n      updateTodo(key, data);\n    } else {\n      const data = newData(oldData, { isDone: false });\n      updateTodo(key, data);\n    }\n    setUpdate(true);\n  };\n\n  // delete todo\n  const handleDelete = (key) => {\n    setDeleteState(true);\n    deleteTodo(key);\n  };\n\n  // fetch todo && reset state\n  useEffect(() => {\n    // fetch todo list data\n    // console.log('fetch data', data, '\\n', update);\n    const fetchData = async () => {\n      await getTodos(setData);\n    };\n    setTimeout(() => fetchData(), 200);\n    // reset\n    setDeleteState(false);\n    setSubmitState(false);\n    setUpdate(false);\n  }, [deleteState, submitState, update]);\n\n  return (\n    <div>\n      <h1 className=\"title\">Todos</h1>\n      <ul className=\"todolist\">\n        {data !== null ? Object.keys(data).map(key => {\n          const list = data[key];\n          return (\n            <li className={data[key].isDone ? 'todolist__list todo--done' : 'todolist__list'} key={key}>\n              <div className=\"todolist__title\">\n                <h2 className=\"todolist__category text\">{list.category}</h2>\n                <p className=\"todolist__text text\">{list.todo}</p>\n              </div>\n              <input className=\"todolist__checkbox\" type=\"checkbox\" checked={data[key].isDone} onChange={e => handleCheckedState(e, key)} />\n              <input className=\"btn--delete\" type=\"button\" value=\"Delete\" onClick={() => handleDelete(key)} />\n            </li>\n          );\n        }): null}\n      </ul>\n      <Modal submitState={isSubmit => setSubmitState(isSubmit)} />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport './App.sass';\nimport Home from '../Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App/App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}